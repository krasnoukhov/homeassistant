- alias: home-assistant-setup
  trigger:
    platform: homeassistant
    event: start
  action:
    - delay: 00:01:00
    - service: script.turn_off_tv

- alias: home-assistant-cron
  trigger:
    platform: time_pattern
    minutes: "/3"
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.someone_arrived_home

- alias: everyone-left
  trigger:
    platform: state
    entity_id: group.people
    to: not_home
  condition:
    condition: template
    value_template: >
      {{ not is_state('person.dmitry', 'unknown') }}
  action:
    - service: switch.turn_off
      data:
        entity_id: group.all_turnable_entities
    - service: light.turn_off
      data:
        entity_id: group.all_turnable_entities
    - service: fan.turn_off
      data:
        entity_id: group.all_turnable_entities
    - service: climate.turn_off
      data:
        entity_id: climate.livingroom_ac
    - service: script.turn_off_tv

- alias: everyone-left-climate
  trigger:
    platform: state
    entity_id: group.people
    to: not_home
  condition:
    condition: template
    value_template: >
      {{ not is_state('person.dmitry', 'unknown') }}
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: group.thermostats
        preset_mode: eco

- alias: entrance-door-open
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d0002c9584d_contact
    to: "on"
  condition:
    condition: state
    entity_id: group.people
    state: not_home
  action:
    - service: switch.turn_on
      entity_id: switch.0x00124b00180358d3_switch_left
    - service: fan.turn_on
      data:
        entity_id: fan.air_purifier

- alias: someone-home-climate
  trigger:
    platform: state
    entity_id: person.daria, person.dmitry, person.guest
    from: not_home
    to: home
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: group.thermostats
        preset_mode: comfort
    - delay: 00:00:05
    - service: climate.set_preset_mode
      data:
        entity_id: group.thermostats
        preset_mode: boost

- alias: bathroom-vent-timeout
  trigger:
    platform: state
    entity_id: switch.0x00124b001838cdfd_switch_right
    to: "on"
  action:
    - delay: 00:30:00
    - service: switch.turn_off
      data:
        entity_id: switch.0x00124b001838cdfd_switch_right

- alias: toggle-bedside-lamp
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0002e2ccea_click
      to: left
    - platform: state
      entity_id: sensor.0x00158d0002e2ccea_click
      to: right
    - platform: state
      entity_id: sensor.0x00158d0002043eb9_click
      to: single
    - platform: state
      entity_id: sensor.0x00158d0002008fd6_click
      to: single
  action:
    service: light.toggle
    data_template:
      entity_id: >-
        {%- if (trigger.to_state.state == "right") or (trigger.entity_id == "sensor.0x00158d0002043eb9_click") -%}
        light.0xd0cf5efffefc876e_light
        {%- else -%}
        light.0x000d6ffffe12c0c2_light
        {%- endif -%}

- alias: configure-bedside-lamp
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0002043eb9_click
      to: double
    - platform: state
      entity_id: sensor.0x00158d0002008fd6_click
      to: double
    - platform: state
      entity_id: sensor.0x00158d0002043eb9_click
      to: triple
    - platform: state
      entity_id: sensor.0x00158d0002008fd6_click
      to: triple
  action:
    service: light.turn_on
    data_template:
      entity_id: >-
        {%- if (trigger.entity_id == "sensor.0x00158d0002043eb9_click") -%}
        light.0xd0cf5efffefc876e_light
        {%- else -%}
        light.0x000d6ffffe12c0c2_light
        {%- endif -%}
      brightness: >-
        {%- if (trigger.to_state.state == "double") -%}
        1
        {%- elif (trigger.entity_id == "sensor.0x00158d0002043eb9_click") -%}
        {{ state_attr("light.0xd0cf5efffefc876e_light", "brightness") + 51 }}
        {%- else -%}
        {{ state_attr("light.0x000d6ffffe12c0c2_light", "brightness") + 51 }}
        {%- endif -%}

- alias: toggle-livingroom-lamp
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0002c92aef_click
      to: single
    - platform: state
      entity_id: sensor.0xec1bbdfffe004203_action
      to: toggle
  action:
    service: light.toggle
    entity_id: group.livingroom_lamp

- alias: configure-livingroom-lamp
  trigger:
    - platform: state
      entity_id: sensor.0xec1bbdfffe004203_action
      to: brightness_up_click
    - platform: state
      entity_id: sensor.0xec1bbdfffe004203_action
      to: brightness_down_click
  action:
    service: light.turn_on
    data_template:
      entity_id: group.livingroom_lamp
      brightness: >-
        {%- if (trigger.to_state.state == "brightness_up_click") -%}
        {{ state_attr("light.0x000d6ffffe0e63cd_light", "brightness") + 51 }}
        {%- else -%}
        {{ state_attr("light.0x000d6ffffe0e63cd_light", "brightness") - 51 }}
        {%- endif -%}

- alias: toggle-kitchen-lamp
  trigger:
    platform: state
    entity_id: sensor.0x00158d0002bfea67_click
    to: single
  action:
    service: light.toggle
    entity_id: group.kitchen_lamp

- alias: send-leak-alert
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d00028a09a5_water_leak, binary_sensor.0x00158d0002821ea3_water_leak
    to: "on"
  action:
    service: notify.people
    data_template:
      message: |
        {{ trigger.from_state.name }} reports a leak, check it out

- alias: toggle-theater-mode
  trigger:
    - platform: state
      entity_id: media_player.apple_tv
      to: playing
      for:
        seconds: 10
    - platform: state
      entity_id: media_player.apple_tv
      to: paused
      for:
        seconds: 10
  condition:
    condition: state
    entity_id: group.livingroom_lamp
    state: "on"
  action:
    service: light.turn_on
    data_template:
      entity_id: group.livingroom_lamp
      brightness_pct: >-
        {% if (trigger.to_state.state == "playing") %}50{% else %}100{% endif %}

- alias: send-plant-alert
  trigger:
    platform: state
    entity_id: plant.calathea, plant.rosemary
    to: problem
    for:
      minutes: 15
  action:
    service: notify.people
    data_template:
      message: |
        {{ trigger.from_state.name }} reports a problem with {{ trigger.to_state.attributes.problem }}, check it out

# Washer

- alias: set-washer-running
  trigger:
    platform: numeric_state
    entity_id: sensor.washer_power
    above: "1.1"
  condition:
    condition: template
    value_template: |
      {{ states('input_select.washer_status') != 'running' }}
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.washer_status
      option: running

- alias: set-washer-clean
  trigger:
    platform: numeric_state
    entity_id: sensor.washer_power
    below: "1.1"
    for:
      minutes: 3
  condition:
    condition: state
    entity_id: input_select.washer_status
    state: running
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.washer_status
      option: clean

- alias: set-washer-open
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d000309939d_contact
    to: "on"
  condition:
    condition: state
    entity_id: input_select.washer_status
    state: clean
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.washer_status
      option: open

- alias: set-washer-idle
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d000309939d_contact
    to: "off"
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.washer_status
      option: idle

- alias: send-washer-alert
  trigger:
    - platform: state
      entity_id: input_select.washer_status
      to: clean
      for:
        minutes: 1
    - platform: state
      entity_id: person.daria, person.dmitry
      from: not_home
      to: home
      for:
        minutes: 5
    - platform: time
      at: "10:15:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.washer_status
        state: clean
      - condition: state
        entity_id: group.tenants
        state: home
      - condition: time
        before: "23:59:00"
        after: "10:00:00"
      - condition: template
        value_template: >-
          {%- if states.automation.send_washer_alert.last_triggered is not none -%}
            {%- if as_timestamp(now())|int - as_timestamp(states.automation.send_washer_alert.attributes.last_triggered)|int > 1800 -%}
              true
            {%- else -%}
              false
            {%- endif -%}
          {%- else -%}
            true
          {%- endif -%}
  action:
    - service_template: >
        {% if (is_state('person.dmitry', 'home')) and (is_state('person.daria', 'home')) %}
          notify.people
        {% elif is_state('person.dmitry', 'home') %}
          notify.dmitry
        {% elif is_state('person.daria', 'home') %}
          notify.daria
        {% endif %}
      data:
        message: Hey, washing machine has finished and is ready to be emptied

# Dishwasher

- alias: set-dishwasher-running
  trigger:
    platform: numeric_state
    entity_id: sensor.dishwasher_power
    above: 3
  condition:
    condition: template
    value_template: |
      {{ states('input_select.dishwasher_status') != 'running' }}
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.dishwasher_status
      option: running

- alias: set-dishwasher-clean
  trigger:
    platform: numeric_state
    entity_id: sensor.dishwasher_power
    below: 2
    for:
      minutes: 3
  condition:
    condition: state
    entity_id: input_select.dishwasher_status
    state: running
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.dishwasher_status
      option: clean

- alias: set-dishwasher-open
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d0002c957d1_contact
    to: "on"
  condition:
    condition: numeric_state
    entity_id: sensor.dishwasher_power
    below: 2
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.dishwasher_status
      option: open

- alias: set-dishwasher-dirty
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d0002c957d1_contact
    to: "off"
  condition:
    condition: numeric_state
    entity_id: sensor.dishwasher_power
    below: 2
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.dishwasher_status
      option: dirty

- alias: send-dishwasher-alert
  trigger:
    - platform: state
      entity_id: input_select.dishwasher_status
      to: clean
      for:
        minutes: 1
    - platform: state
      entity_id: person.daria, person.dmitry
      from: not_home
      to: home
      for:
        minutes: 5
    - platform: time
      at: "10:15:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.dishwasher_status
        state: clean
      - condition: state
        entity_id: group.tenants
        state: home
      - condition: time
        before: "23:59:00"
        after: "10:00:00"
      - condition: template
        value_template: >-
          {%- if states.automation.send_dishwasher_alert.last_triggered is not none -%}
            {%- if as_timestamp(now())|int - as_timestamp(states.automation.send_dishwasher_alert.attributes.last_triggered)|int > 1800 -%}
              true
            {%- else -%}
              false
            {%- endif -%}
          {%- else -%}
            true
          {%- endif -%}
  action:
    - service_template: >
        {% if (is_state('person.dmitry', 'home')) and (is_state('person.daria', 'home')) %}
          notify.people
        {% elif is_state('person.dmitry', 'home') %}
          notify.dmitry
        {% elif is_state('person.daria', 'home') %}
          notify.daria
        {% endif %}
      data:
        message: Hey, the dishwasher has finished and is ready to be emptied
