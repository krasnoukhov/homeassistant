esphome:
  name: shit_scale
  platform: ESP32
  board: nodemcu-32s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: high

logger:
api:
ota:

binary_sensor:
  - platform: status
    name: shit_scale_status

  - platform: gpio
    id: clean_state
    pin:
      number: GPIO32
      inverted: true
    filters:
      - delayed_on: 50ms
    on_press:
      then:
        - delay: 10s
        - homeassistant.service:
            service: counter.reset
            data:
              entity_id: counter.shit_scale_visits
        - homeassistant.service:
            service: input_number.set_value
            data_template:
              entity_id: input_number.shit_scale_tare
              value: |-
                {{ tare_weight }}
            variables:
              tare_weight: |-
                return (int)id(weight).state;

sensor:
  # - platform: adc
  #   name: shit_scale_voltage
  #   pin: GPIO34
  #   attenuation: 11db
  #
  # - platform: wifi_signal
  #   name: shit_scale_wifi_signal
  #   update_interval: 15s

  - platform: homeassistant
    id: tare
    entity_id: sensor.shit_scale_tare

  - platform: hx711
    id: weight
    dout_pin: GPIO22
    clk_pin: GPIO23
    gain: 64
    update_interval: 5s
    filters:
      - calibrate_linear:
          - 233950 -> 0
          - 249035 -> 1010
      - delta: 20
    unit_of_measurement: g
    on_value:
      then:
        - lambda: |-
            static bool is_visiting = false;
            ESP_LOGD("weight", "Tare: %f, weight: %f, visiting: %d", id(tare).state, x, is_visiting);

            if (x > id(tare).state + 500.0) {
              if (!is_visiting) {
                is_visiting = true;

                esphome::api::ServiceCallResponse action;
                action.set_service("counter.increment");
                action.set_data({ api::KeyValuePair("entity_id", "counter.shit_scale_visits") });
                id(api_apiserver)->send_service_call(action);

                ESP_LOGD("weight", "Incremented");
              }
            } else {
              is_visiting = false;
            }
